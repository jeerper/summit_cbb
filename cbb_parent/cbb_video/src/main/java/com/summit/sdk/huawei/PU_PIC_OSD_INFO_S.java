package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_PIC_OSD_INFO_S extends Structure {
	/** \ufffd\ufffd\ufffd\ufffd\u04f5\ufffdOSD\ufffd\ufffd\u013f */
	public int uPicOSDNum;
	/**
	 * \ufffd\ufffd\ufffd\u04f5\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_PIC_OSD_TYPE_E[(15)]
	 */
	public int[] aenPicOSDType = new int[15];
	/**
	 * OSD\ufffd\ufffd\ufffd\ufffd\u03bb\ufffd\ufffd<br>
	 * C type : PU_PIC_OSD_LOCATION_E
	 */
	public int enPicOSDLocation;
	/**
	 * @see PU_FONT_SIZE_E<br>
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\u0421<br>
	 * C type : PU_FONT_SIZE_E
	 */
	public int enFontSize;
	/** \u01f0\ufffd\ufffd(\ufffd\ufffd\ufffd\ufffd)\u026b\ufffd\u02b8\ufffd\u02bd0xRRGGBB\ufffd\ufffd\ufffd\ufffd\ufffd\u02ae\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulFgColor;
	/**
	 * \u01f0\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05a3\ufffd\u0378\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\u03a70~128<br>
	 * C type : UCHAR
	 */
	public byte ucFgAlpha;
	/** \ufffd\ufffd\ufffd\ufffd\u026b\ufffd\ufffd \ufffd\ufffd\u02bd0xRRGGBB \ufffd\ufffd\ufffd\ufffd\ufffd\u02ae\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulBgColor;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\u0378\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\u03a70~128(\ufffd\ufffd\u02fc)<br>
	 * C type : UCHAR
	 */
	public byte ucBgAlpha;
	public PU_PIC_OSD_INFO_S() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("uPicOSDNum", "aenPicOSDType", "enPicOSDLocation", "enFontSize", "ulFgColor", "ucFgAlpha", "ulBgColor", "ucBgAlpha");
	}
	/**
	 * @param uPicOSDNum \ufffd\ufffd\ufffd\ufffd\u04f5\ufffdOSD\ufffd\ufffd\u013f<br>
	 * @param aenPicOSDType \ufffd\ufffd\ufffd\u04f5\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_PIC_OSD_TYPE_E[(15)]<br>
	 * @param enPicOSDLocation OSD\ufffd\ufffd\ufffd\ufffd\u03bb\ufffd\ufffd<br>
	 * C type : PU_PIC_OSD_LOCATION_E<br>
	 * @param enFontSize @see PU_FONT_SIZE_E<br>
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\u0421<br>
	 * C type : PU_FONT_SIZE_E<br>
	 * @param ulFgColor \u01f0\ufffd\ufffd(\ufffd\ufffd\ufffd\ufffd)\u026b\ufffd\u02b8\ufffd\u02bd0xRRGGBB\ufffd\ufffd\ufffd\ufffd\ufffd\u02ae\ufffd\ufffd\ufffd\ufffd<br>
	 * @param ucFgAlpha \u01f0\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05a3\ufffd\u0378\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\u03a70~128<br>
	 * C type : UCHAR<br>
	 * @param ulBgColor \ufffd\ufffd\ufffd\ufffd\u026b\ufffd\ufffd \ufffd\ufffd\u02bd0xRRGGBB \ufffd\ufffd\ufffd\ufffd\ufffd\u02ae\ufffd\ufffd\ufffd\ufffd<br>
	 * @param ucBgAlpha \ufffd\ufffd\ufffd\ufffd\u0378\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\u03a70~128(\ufffd\ufffd\u02fc)<br>
	 * C type : UCHAR
	 */
	public PU_PIC_OSD_INFO_S(int uPicOSDNum, int aenPicOSDType[], int enPicOSDLocation, int enFontSize, NativeLong ulFgColor, byte ucFgAlpha, NativeLong ulBgColor, byte ucBgAlpha) {
		super();
		this.uPicOSDNum = uPicOSDNum;
		if ((aenPicOSDType.length != this.aenPicOSDType.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aenPicOSDType = aenPicOSDType;
		this.enPicOSDLocation = enPicOSDLocation;
		this.enFontSize = enFontSize;
		this.ulFgColor = ulFgColor;
		this.ucFgAlpha = ucFgAlpha;
		this.ulBgColor = ulBgColor;
		this.ucBgAlpha = ucBgAlpha;
	}
	public PU_PIC_OSD_INFO_S(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_PIC_OSD_INFO_S implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_PIC_OSD_INFO_S implements Structure.ByValue {
		
	};
}
