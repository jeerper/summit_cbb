package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_CONFIG_JSON_OUTPUT extends Structure {
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJSON\ufffd\ufffd\u02bd\ufffd\ufffd\u05e2\ufffd\u28fa\u04e6\ufffd\u00f2\ufffd\ufffd\ufffd\u04aa\ufffd\ufffd\ufffd\ufffd\ufffd\u3e7b\ufffd\ufffd\ufffd\u06b4\ufffd,\ufffd\ufffd\ufffd\ufffd\u00fb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u06b4\u6cbb\ufffd\ufffd\ufffd\ufffd\u04ff\u06b7\ufffd\ufffd\u0636\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ub863<br>
	 * C type : VOID*
	 */
	public Pointer pOutBuffer;
	/** \ufffd\u00fb\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0421(\ufffd\u06b4\ufffd\ufffd\u0421) */
	public NativeLong ulInputBufferSize;
	/** \u02b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0421 */
	public NativeLong ulRealBufferSize;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03aa0<br>
	 * C type : CHAR[256]
	 */
	public byte[] szReserved = new byte[256];
	public PU_CONFIG_JSON_OUTPUT() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("pOutBuffer", "ulInputBufferSize", "ulRealBufferSize", "szReserved");
	}
	/**
	 * @param pOutBuffer \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJSON\ufffd\ufffd\u02bd\ufffd\ufffd\u05e2\ufffd\u28fa\u04e6\ufffd\u00f2\ufffd\ufffd\ufffd\u04aa\ufffd\ufffd\ufffd\ufffd\ufffd\u3e7b\ufffd\ufffd\ufffd\u06b4\ufffd,\ufffd\ufffd\ufffd\ufffd\u00fb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u06b4\u6cbb\ufffd\ufffd\ufffd\ufffd\u04ff\u06b7\ufffd\ufffd\u0636\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ub863<br>
	 * C type : VOID*<br>
	 * @param ulInputBufferSize \ufffd\u00fb\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0421(\ufffd\u06b4\ufffd\ufffd\u0421)<br>
	 * @param ulRealBufferSize \u02b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0421<br>
	 * @param szReserved \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03aa0<br>
	 * C type : CHAR[256]
	 */
	public PU_CONFIG_JSON_OUTPUT(Pointer pOutBuffer, NativeLong ulInputBufferSize, NativeLong ulRealBufferSize, byte szReserved[]) {
		super();
		this.pOutBuffer = pOutBuffer;
		this.ulInputBufferSize = ulInputBufferSize;
		this.ulRealBufferSize = ulRealBufferSize;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_CONFIG_JSON_OUTPUT(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_CONFIG_JSON_OUTPUT implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_CONFIG_JSON_OUTPUT implements Structure.ByValue {
		
	};
}
