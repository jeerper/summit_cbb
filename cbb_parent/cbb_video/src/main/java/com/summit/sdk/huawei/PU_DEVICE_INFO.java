package com.summit.sdk.huawei;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_DEVICE_INFO extends Structure {
	/**
	 * \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd\uece432\u03bb<br>
	 * C type : CHAR[32]
	 */
	public byte[] szDeviceName = new byte[32];
	/**
	 * \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[12]
	 */
	public byte[] szDeviceFac = new byte[12];
	/**
	 * \ufffd\u8c78\ufffd\u037a\ufffd,\u05bb\ufffd\u0272\ufffd\u046f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[32]
	 */
	public byte[] szDeviceType = new byte[32];
	/**
	 * \u04f2\ufffd\ufffd\ufffd\ufffd\ufffd\u043a\ufffd<br>
	 * C type : CHAR[32]
	 */
	public byte[] szSerialNumber = new byte[32];
	/**
	 * \ufffd\u8c78\ufffd\u6c7e<br>
	 * C type : PU_DEVICE_VERSION
	 */
	public PU_DEVICE_VERSION stDeviceVersion;
	/**
	 * Bom\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_DEVICE_INFO() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("szDeviceName", "szDeviceFac", "szDeviceType", "szSerialNumber", "stDeviceVersion", "szReserved");
	}
	/**
	 * @param szDeviceName \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd\uece432\u03bb<br>
	 * C type : CHAR[32]<br>
	 * @param szDeviceFac \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[12]<br>
	 * @param szDeviceType \ufffd\u8c78\ufffd\u037a\ufffd,\u05bb\ufffd\u0272\ufffd\u046f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[32]<br>
	 * @param szSerialNumber \u04f2\ufffd\ufffd\ufffd\ufffd\ufffd\u043a\ufffd<br>
	 * C type : CHAR[32]<br>
	 * @param stDeviceVersion \ufffd\u8c78\ufffd\u6c7e<br>
	 * C type : PU_DEVICE_VERSION<br>
	 * @param szReserved Bom\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[32]
	 */
	public PU_DEVICE_INFO(byte szDeviceName[], byte szDeviceFac[], byte szDeviceType[], byte szSerialNumber[], PU_DEVICE_VERSION stDeviceVersion, byte szReserved[]) {
		super();
		if ((szDeviceName.length != this.szDeviceName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDeviceName = szDeviceName;
		if ((szDeviceFac.length != this.szDeviceFac.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDeviceFac = szDeviceFac;
		if ((szDeviceType.length != this.szDeviceType.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDeviceType = szDeviceType;
		if ((szSerialNumber.length != this.szSerialNumber.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szSerialNumber = szSerialNumber;
		this.stDeviceVersion = stDeviceVersion;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_DEVICE_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_DEVICE_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_DEVICE_INFO implements Structure.ByValue {
		
	};
}
