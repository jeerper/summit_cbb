package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagItsAdaptSnapIntervalType extends Structure {
	/** \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b5 */
	public NativeLong uiLowSpeedMax;
	/** \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b5 */
	public NativeLong uiMidSpeedMax;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[2]
	 */
	public int[] aiAdaptLowSpeedInterval = new int[2];
	/**
	 * \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[2]
	 */
	public int[] aiAdaptMidSpeedInterval = new int[2];
	/**
	 * \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[2]
	 */
	public int[] aiAdaptHighSpeedInterval = new int[2];
	public tagItsAdaptSnapIntervalType() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("uiLowSpeedMax", "uiMidSpeedMax", "aiAdaptLowSpeedInterval", "aiAdaptMidSpeedInterval", "aiAdaptHighSpeedInterval");
	}
	/**
	 * @param uiLowSpeedMax \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b5<br>
	 * @param uiMidSpeedMax \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b5<br>
	 * @param aiAdaptLowSpeedInterval \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[2]<br>
	 * @param aiAdaptMidSpeedInterval \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[2]<br>
	 * @param aiAdaptHighSpeedInterval \ufffd\ufffd\ufffd\ufffd\u04e6\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[2]
	 */
	public tagItsAdaptSnapIntervalType(NativeLong uiLowSpeedMax, NativeLong uiMidSpeedMax, int aiAdaptLowSpeedInterval[], int aiAdaptMidSpeedInterval[], int aiAdaptHighSpeedInterval[]) {
		super();
		this.uiLowSpeedMax = uiLowSpeedMax;
		this.uiMidSpeedMax = uiMidSpeedMax;
		if ((aiAdaptLowSpeedInterval.length != this.aiAdaptLowSpeedInterval.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aiAdaptLowSpeedInterval = aiAdaptLowSpeedInterval;
		if ((aiAdaptMidSpeedInterval.length != this.aiAdaptMidSpeedInterval.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aiAdaptMidSpeedInterval = aiAdaptMidSpeedInterval;
		if ((aiAdaptHighSpeedInterval.length != this.aiAdaptHighSpeedInterval.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aiAdaptHighSpeedInterval = aiAdaptHighSpeedInterval;
	}
	public tagItsAdaptSnapIntervalType(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagItsAdaptSnapIntervalType implements Structure.ByReference {
		
	};
	public static class ByValue extends tagItsAdaptSnapIntervalType implements Structure.ByValue {
		
	};
}
