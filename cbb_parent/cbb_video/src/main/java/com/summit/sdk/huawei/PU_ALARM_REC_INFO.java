package com.summit.sdk.huawei;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_ALARM_REC_INFO extends Structure {
	/**
	 * \u00bc\ufffd\ufffd\ufffd\u04e6\ufffd\u6faf\ufffd\ufffd\u03e2<br>
	 * C type : PU_ALARM_REPORT_S
	 */
	public PU_ALARM_REPORT stAlarmReport;
	/**
	 * \u00bc\ufffd\ufffd\ufffd\ufffd\u02bc\u02b1\ufffd\ufffd(UTC\u02b1\ufffd\ufffd)<br>
	 * C type : PU_TIME_S
	 */
	public PU_TIME stBeginTime;
	/**
	 * \u00bc\ufffd\ufffd\ufffd\ufffd\ufffd\u02b1\ufffd\ufffd(UTC\u02b1\ufffd\ufffd)<br>
	 * C type : PU_TIME_S
	 */
	public PU_TIME stEndTime;
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_ALARM_REC_INFO() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("stAlarmReport", "stBeginTime", "stEndTime", "szReserved");
	}
	/**
	 * @param stAlarmReport \u00bc\ufffd\ufffd\ufffd\u04e6\ufffd\u6faf\ufffd\ufffd\u03e2<br>
	 * C type : PU_ALARM_REPORT_S<br>
	 * @param stBeginTime \u00bc\ufffd\ufffd\ufffd\ufffd\u02bc\u02b1\ufffd\ufffd(UTC\u02b1\ufffd\ufffd)<br>
	 * C type : PU_TIME_S<br>
	 * @param stEndTime \u00bc\ufffd\ufffd\ufffd\ufffd\ufffd\u02b1\ufffd\ufffd(UTC\u02b1\ufffd\ufffd)<br>
	 * C type : PU_TIME_S<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_ALARM_REC_INFO(PU_ALARM_REPORT stAlarmReport, PU_TIME stBeginTime, PU_TIME stEndTime, byte szReserved[]) {
		super();
		this.stAlarmReport = stAlarmReport;
		this.stBeginTime = stBeginTime;
		this.stEndTime = stEndTime;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_ALARM_REC_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_ALARM_REC_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_ALARM_REC_INFO implements Structure.ByValue {
		
	};
}
