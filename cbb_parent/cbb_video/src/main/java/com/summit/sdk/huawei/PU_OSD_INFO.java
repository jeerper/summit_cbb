package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_OSD_INFO extends Structure {
	public NativeLong ulStartX;
	public NativeLong ulStartY;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u026b 0x00RGB */
	public NativeLong ulTextColor;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u026b<br>
	 * C type : PU_COLOR_TYPE_E
	 */
	public int enBackgroundColor;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0378\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ALPHA_TYPE_E
	 */
	public int enBackgroundAlpha;
	/**
	 * \ufffd\ufffd[0]\u03bb\ufffd\ufffd\u02b6\ufffd\u01f7\ufffd\u026b(0\ufffd\ufffd\ufffd\ufffd\u026b,1\ufffd\ufffd\u026b)<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserve = new byte[32];
	public PU_OSD_INFO() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulStartX", "ulStartY", "ulTextColor", "enBackgroundColor", "enBackgroundAlpha", "szReserve");
	}
	/**
	 * @param ulTextColor \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u026b 0x00RGB<br>
	 * @param enBackgroundColor \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u026b<br>
	 * C type : PU_COLOR_TYPE_E<br>
	 * @param enBackgroundAlpha \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0378\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ALPHA_TYPE_E<br>
	 * @param szReserve \ufffd\ufffd[0]\u03bb\ufffd\ufffd\u02b6\ufffd\u01f7\ufffd\u026b(0\ufffd\ufffd\ufffd\ufffd\u026b,1\ufffd\ufffd\u026b)<br>
	 * C type : CHAR[32]
	 */
	public PU_OSD_INFO(NativeLong ulStartX, NativeLong ulStartY, NativeLong ulTextColor, int enBackgroundColor, int enBackgroundAlpha, byte szReserve[]) {
		super();
		this.ulStartX = ulStartX;
		this.ulStartY = ulStartY;
		this.ulTextColor = ulTextColor;
		this.enBackgroundColor = enBackgroundColor;
		this.enBackgroundAlpha = enBackgroundAlpha;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_OSD_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_OSD_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_OSD_INFO implements Structure.ByValue {
		
	};
}
