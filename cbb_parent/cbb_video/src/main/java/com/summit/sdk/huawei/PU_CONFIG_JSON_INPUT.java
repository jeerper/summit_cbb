package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_CONFIG_JSON_INPUT extends Structure {
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ue8ec\ufffd\u05b7\ufffd\ufffd\u02bd<br>
	 * C type : VOID*
	 */
	public Pointer pRequestUrl;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\uece4\ufffd\u0223\ufffd\ufffd\u05b7\ufffd\ufffd\ufffd */
	public NativeLong ulRequestUrlLen;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJSON\ufffd\ufffd\u02bd<br>
	 * C type : VOID*
	 */
	public Pointer pInBuffer;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0421 */
	public NativeLong ulInBufferSize;
	/** \ufffd\ufffd\ufffd\u0573\ufffd\u02b1\u02b1\ufffd\u48ec\ufffd\ufffd\u03bb\ufffd\ufffdms\ufffd\ufffd\ufffd\ufffd0\ufffd\ufffd\u02b9\ufffd\ufffd\u012c\ufffd\u03f3\ufffd\u02b15s */
	public NativeLong ulRecvTimeOut;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03aa0<br>
	 * C type : CHAR[256]
	 */
	public byte[] szReserved = new byte[256];
	public PU_CONFIG_JSON_INPUT() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("pRequestUrl", "ulRequestUrlLen", "pInBuffer", "ulInBufferSize", "ulRecvTimeOut", "szReserved");
	}
	/**
	 * @param pRequestUrl \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ue8ec\ufffd\u05b7\ufffd\ufffd\u02bd<br>
	 * C type : VOID*<br>
	 * @param ulRequestUrlLen \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\uece4\ufffd\u0223\ufffd\ufffd\u05b7\ufffd\ufffd\ufffd<br>
	 * @param pInBuffer \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJSON\ufffd\ufffd\u02bd<br>
	 * C type : VOID*<br>
	 * @param ulInBufferSize \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0421<br>
	 * @param ulRecvTimeOut \ufffd\ufffd\ufffd\u0573\ufffd\u02b1\u02b1\ufffd\u48ec\ufffd\ufffd\u03bb\ufffd\ufffdms\ufffd\ufffd\ufffd\ufffd0\ufffd\ufffd\u02b9\ufffd\ufffd\u012c\ufffd\u03f3\ufffd\u02b15s<br>
	 * @param szReserved \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03aa0<br>
	 * C type : CHAR[256]
	 */
	public PU_CONFIG_JSON_INPUT(Pointer pRequestUrl, NativeLong ulRequestUrlLen, Pointer pInBuffer, NativeLong ulInBufferSize, NativeLong ulRecvTimeOut, byte szReserved[]) {
		super();
		this.pRequestUrl = pRequestUrl;
		this.ulRequestUrlLen = ulRequestUrlLen;
		this.pInBuffer = pInBuffer;
		this.ulInBufferSize = ulInBufferSize;
		this.ulRecvTimeOut = ulRecvTimeOut;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_CONFIG_JSON_INPUT(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_CONFIG_JSON_INPUT implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_CONFIG_JSON_INPUT implements Structure.ByValue {
		
	};
}
