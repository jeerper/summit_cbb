package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagItsEPoliceSnapType extends Structure {
	/** \u0368\ufffd\ufffdID */
	public NativeLong ulChannelId;
	/**
	 * ITS\u04b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : EN_ITS_TYPE
	 */
	public int enITSType;
	/**
	 * \u03a5\ufffd\ufffd\ufffd\ufffd\ufffd\u037c\ufffd\u2dfd\u02bd<br>
	 * C type : EN_ITS_REGULA_DT_TYPE
	 */
	public int enRegulaDtType;
	/**
	 * \ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[4]
	 */
	public int[] aiMultiSnapInterval = new int[4];
	/** \u03a5\ufffd\ufffd\u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u7faf14\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd15\ufffd\ufffd */
	public int iRegulationNum;
	/**
	 * \u03a5\ufffd\ufffd\u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ITS_REGULATION_SNAP_CONFIG_UNIT_S[32]
	 */
	public tagRegulationSnapConfigUnit[] astRegulationSnapCfgU = new tagRegulationSnapConfigUnit[32];
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public tagItsEPoliceSnapType() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulChannelId", "enITSType", "enRegulaDtType", "aiMultiSnapInterval", "iRegulationNum", "astRegulationSnapCfgU", "szReserve");
	}
	/**
	 * @param ulChannelId \u0368\ufffd\ufffdID<br>
	 * @param enITSType ITS\u04b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : EN_ITS_TYPE<br>
	 * @param enRegulaDtType \u03a5\ufffd\ufffd\ufffd\ufffd\ufffd\u037c\ufffd\u2dfd\u02bd<br>
	 * C type : EN_ITS_REGULA_DT_TYPE<br>
	 * @param aiMultiSnapInterval \ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[4]<br>
	 * @param iRegulationNum \u03a5\ufffd\ufffd\u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u7faf14\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd15\ufffd\ufffd<br>
	 * @param astRegulationSnapCfgU \u03a5\ufffd\ufffd\u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ITS_REGULATION_SNAP_CONFIG_UNIT_S[32]<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public tagItsEPoliceSnapType(NativeLong ulChannelId, int enITSType, int enRegulaDtType, int aiMultiSnapInterval[], int iRegulationNum, tagRegulationSnapConfigUnit astRegulationSnapCfgU[], byte szReserve[]) {
		super();
		this.ulChannelId = ulChannelId;
		this.enITSType = enITSType;
		this.enRegulaDtType = enRegulaDtType;
		if ((aiMultiSnapInterval.length != this.aiMultiSnapInterval.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aiMultiSnapInterval = aiMultiSnapInterval;
		this.iRegulationNum = iRegulationNum;
		if ((astRegulationSnapCfgU.length != this.astRegulationSnapCfgU.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astRegulationSnapCfgU = astRegulationSnapCfgU;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public tagItsEPoliceSnapType(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagItsEPoliceSnapType implements Structure.ByReference {
		
	};
	public static class ByValue extends tagItsEPoliceSnapType implements Structure.ByValue {
		
	};
}
