package com.summit.sdk.huawei;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_HOTMAP_TABLE_TIME extends Structure {
	/** \ufffd\ufffd\u0773\ufffd\ufffd\ufffd */
	public short usHotMapRecordNum;
	/** C type : map_union */
	public map_union map;
	/** <i>native declaration : E:\video\HWPuSDK.h:10598</i> */
	public static class map_union extends Union {
		/**
		 * \ufffd\uac68\ufffd\uddf5\ufffd\u063d\ufffd\ufffd<br>
		 * C type : USHORT[(12)]
		 */
		public short[] ausHotMapTableYear = new short[12];
		/**
		 * \ufffd\u00b1\ufffd\ufffd\uddf5\ufffd\u063d\ufffd\ufffd<br>
		 * C type : USHORT[(31)]
		 */
		public short[] ausHotMapTableMonth = new short[31];
		/**
		 * \ufffd\u0731\ufffd\ufffd\uddf5\ufffd\u063d\ufffd\ufffd<br>
		 * C type : USHORT[(7)]
		 */
		public short[] ausHotMapTableWeek = new short[7];
		/**
		 * \ufffd\u0571\ufffd\ufffd\uddf5\ufffd\u063d\ufffd\ufffd<br>
		 * C type : USHORT[(24)]
		 */
		public short[] ausHotMapTableDay = new short[24];
		public map_union() {
			super();
		}
		/**
		 * @param ausHotMapTableYear_or_ausHotMapTableMonth_or_ausHotMapTableWeek_or_ausHotMapTableDay \ufffd\uac68\ufffd\uddf5\ufffd\u063d\ufffd\ufffd<br>
		 * C type : USHORT[(12)], or \ufffd\u00b1\ufffd\ufffd\uddf5\ufffd\u063d\ufffd\ufffd<br>
		 * C type : USHORT[(31)], or \ufffd\u0731\ufffd\ufffd\uddf5\ufffd\u063d\ufffd\ufffd<br>
		 * C type : USHORT[(7)], or \ufffd\u0571\ufffd\ufffd\uddf5\ufffd\u063d\ufffd\ufffd<br>
		 * C type : USHORT[(24)]
		 */
		public map_union(short ausHotMapTableYear_or_ausHotMapTableMonth_or_ausHotMapTableWeek_or_ausHotMapTableDay[]) {
			super();
//			if ((ausHotMapTableYear_or_ausHotMapTableMonth_or_ausHotMapTableWeek_or_ausHotMapTableDay.length != this.ausHotMapTableYear_or_ausHotMapTableMonth_or_ausHotMapTableWeek_or_ausHotMapTableDay.length))
//				throw new IllegalArgumentException("Wrong array size !");
			this.ausHotMapTableDay = this.ausHotMapTableWeek = this.ausHotMapTableMonth = this.ausHotMapTableYear = ausHotMapTableYear_or_ausHotMapTableMonth_or_ausHotMapTableWeek_or_ausHotMapTableDay;
			setType(short[].class);
		}
		public map_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends map_union implements Structure.ByReference {
			
		};
		public static class ByValue extends map_union implements Structure.ByValue {
			
		};
	};
	public PU_HOTMAP_TABLE_TIME() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("usHotMapRecordNum", "map");
	}
	/**
	 * @param usHotMapRecordNum \ufffd\ufffd\u0773\ufffd\ufffd\ufffd<br>
	 * @param map C type : map_union
	 */
	public PU_HOTMAP_TABLE_TIME(short usHotMapRecordNum, map_union map) {
		super();
		this.usHotMapRecordNum = usHotMapRecordNum;
		this.map = map;
	}
	public PU_HOTMAP_TABLE_TIME(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_HOTMAP_TABLE_TIME implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_HOTMAP_TABLE_TIME implements Structure.ByValue {
		
	};
}
