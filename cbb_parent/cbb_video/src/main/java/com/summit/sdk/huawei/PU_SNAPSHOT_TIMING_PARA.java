package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_SNAPSHOT_TIMING_PARA extends Structure {
	/** \ufffd\u01f7\ufffd\ufffd\ufffd\ufffd\u00f6\ufffd\u02b1\u05e5\ufffd\u0139\ufffd\ufffd\ufffd */
	public boolean bEnable;
	/** \u0368\ufffd\ufffdID */
	public NativeLong ulChannelID;
	/** \ufffd\ufffd\ufffd\ufffdID */
	public NativeLong ulStreamID;
	/** \u05e5\ufffd\u013c\ufffd\ufffd(\ufffd\ufffd) */
	public NativeLong ulSnapCount;
	/**
	 * \u037c\u01ac\ufffd\ufffd\u02bd<br>
	 * C type : PU_SNAPSHOT_FORMAT_E
	 */
	public int enPictureFormat;
	/**
	 * \u0524\ufffd\ufffd\ufffd\u05b6\ufffd<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_SNAPSHOT_TIMING_PARA() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("bEnable", "ulChannelID", "ulStreamID", "ulSnapCount", "enPictureFormat", "szReserved");
	}
	/**
	 * @param bEnable \ufffd\u01f7\ufffd\ufffd\ufffd\ufffd\u00f6\ufffd\u02b1\u05e5\ufffd\u0139\ufffd\ufffd\ufffd<br>
	 * @param ulChannelID \u0368\ufffd\ufffdID<br>
	 * @param ulStreamID \ufffd\ufffd\ufffd\ufffdID<br>
	 * @param ulSnapCount \u05e5\ufffd\u013c\ufffd\ufffd(\ufffd\ufffd)<br>
	 * @param enPictureFormat \u037c\u01ac\ufffd\ufffd\u02bd<br>
	 * C type : PU_SNAPSHOT_FORMAT_E<br>
	 * @param szReserved \u0524\ufffd\ufffd\ufffd\u05b6\ufffd<br>
	 * C type : CHAR[32]
	 */
	public PU_SNAPSHOT_TIMING_PARA(boolean bEnable, NativeLong ulChannelID, NativeLong ulStreamID, NativeLong ulSnapCount, int enPictureFormat, byte szReserved[]) {
		super();
		this.bEnable = bEnable;
		this.ulChannelID = ulChannelID;
		this.ulStreamID = ulStreamID;
		this.ulSnapCount = ulSnapCount;
		this.enPictureFormat = enPictureFormat;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_SNAPSHOT_TIMING_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_SNAPSHOT_TIMING_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_SNAPSHOT_TIMING_PARA implements Structure.ByValue {
		
	};
}
