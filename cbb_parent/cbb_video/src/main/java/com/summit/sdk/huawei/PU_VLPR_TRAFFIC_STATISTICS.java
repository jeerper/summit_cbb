package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_VLPR_TRAFFIC_STATISTICS extends Structure {
	/** \u0368\ufffd\ufffdID */
	public NativeLong ulChannelId;
	/** \ufffd\u01f7\ufffd\u02b9\ufffd\ufffd */
	public boolean bEnable;
	/** \u0373\ufffd\u01bc\ufffd\ufffd */
	public NativeLong ulInterval;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u00b7\ufffd\u06be\ufffd\ufffd\ufffd */
	public NativeLong uDistanceToCrossing;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\uda8e\udd36\ufffd */
	public NativeLong uDetectAreaLength;
	/** \u04f5\ufffd\u00b3\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b5\ufffd\ufffd\ufffd\ufffd\u04f5\ufffd\u00b3\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u06b5\ufffd\ufffd\u06b4\ufffd\ufffd\ufffd\u05b5\u02b1\ufffd\ufffd\ufffd\u0436\ufffd\ufffd\ufffd\u00b7\u04f5\ufffd\ufffd */
	public NativeLong uCongestionLaneThreshold;
	/** \u04f5\ufffd\ufffd\ufffd\ufffd\u05b5----\ufffd\ufffd\u0368 */
	public float fCongestThreholdForUnblocked;
	/** \u04f5\ufffd\ufffd\ufffd\ufffd\u05b5------\ufffd\ufffd\ufffd\ufffd */
	public float fCongestThreholdForAmble;
	/** \u04f5\ufffd\ufffd\ufffd\ufffd\u05b5------\u04f5\ufffd\ufffd */
	public float fCongestThreholdForCongest;
	/** C type : CHAR[256] */
	public byte[] szReserved = new byte[256];
	public PU_VLPR_TRAFFIC_STATISTICS() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulChannelId", "bEnable", "ulInterval", "uDistanceToCrossing", "uDetectAreaLength", "uCongestionLaneThreshold", "fCongestThreholdForUnblocked", "fCongestThreholdForAmble", "fCongestThreholdForCongest", "szReserved");
	}
	public PU_VLPR_TRAFFIC_STATISTICS(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_VLPR_TRAFFIC_STATISTICS implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_VLPR_TRAFFIC_STATISTICS implements Structure.ByValue {
		
	};
}
