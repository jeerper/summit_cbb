package com.summit.sdk.huawei;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_USER_INFO extends Structure {
	/**
	 * \ufffd\u00fb\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_USER_TYPE_E
	 */
	public int enUserType;
	/**
	 * \ufffd\u00fb\ufffd\ufffd\ufffd,\ufffd\uece4\u05a7\ufffd\ufffd16\u03bb<br>
	 * C type : CHAR[32]
	 */
	public byte[] szUserName = new byte[32];
	/**
	 * Pwd<br>
	 * C type : CHAR[(64 + 4)]
	 */
	public byte[] szUserPwd = new byte[64 + 4];
	/**
	 * szReserved[0]\ufffd\ufffd\ufffdWEB\ufffd\ufffd\ufffd\ufffd\u00bd\ufffd\u00fb\ufffd\ufffd\ufffd\u03a71-10<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_USER_INFO() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("enUserType", "szUserName", "szUserPwd", "szReserved");
	}
	/**
	 * @param enUserType \ufffd\u00fb\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_USER_TYPE_E<br>
	 * @param szUserName \ufffd\u00fb\ufffd\ufffd\ufffd,\ufffd\uece4\u05a7\ufffd\ufffd16\u03bb<br>
	 * C type : CHAR[32]<br>
	 * @param szUserPwd Pwd<br>
	 * C type : CHAR[(64 + 4)]<br>
	 * @param szReserved szReserved[0]\ufffd\ufffd\ufffdWEB\ufffd\ufffd\ufffd\ufffd\u00bd\ufffd\u00fb\ufffd\ufffd\ufffd\u03a71-10<br>
	 * C type : CHAR[32]
	 */
	public PU_USER_INFO(int enUserType, byte szUserName[], byte szUserPwd[], byte szReserved[]) {
		super();
		this.enUserType = enUserType;
		if ((szUserName.length != this.szUserName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szUserName = szUserName;
		if ((szUserPwd.length != this.szUserPwd.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szUserPwd = szUserPwd;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_USER_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_USER_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_USER_INFO implements Structure.ByValue {
		
	};
}
