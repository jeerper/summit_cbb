package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_STREAM_ABILITY_PARA extends Structure {
	/**
	 * \ufffd\ufffd\u01b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_STREAM_TYPE_E
	 */
	public int enStreamType;
	/**
	 * \ufffd\ufffd\u01b5\ufffd\ufffd\ufffd\ufffd\ufffd\u02bd<br>
	 * C type : PU_ENCODE_TYPE_E[4]
	 */
	public int[] enVideoFormat = new int[4];
	/**
	 * \ufffd\ufffd\ufffd\u05b1\ufffd\ufffd\ufffd<br>
	 * C type : PU_RESOLUTION_TYPE_E
	 */
	public int enMaxResolution;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulMaxBitRate;
	/** \ufffd\ufffd\ufffd\u05a1\ufffd\ufffd */
	public NativeLong ulMaxFrmRate;
	/** \ufffd\ufffd\ufffdI\u05a1\ufffd\ufffd\ufffd */
	public NativeLong ulMaxIFrameInterval;
	/**
	 * \ufffd\ufffd\u01b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_VIDEO_TYPE_E
	 */
	public int enVideoType;
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_STREAM_ABILITY_PARA() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("enStreamType", "enVideoFormat", "enMaxResolution", "ulMaxBitRate", "ulMaxFrmRate", "ulMaxIFrameInterval", "enVideoType", "szReserved");
	}
	/**
	 * @param enStreamType \ufffd\ufffd\u01b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_STREAM_TYPE_E<br>
	 * @param enVideoFormat \ufffd\ufffd\u01b5\ufffd\ufffd\ufffd\ufffd\ufffd\u02bd<br>
	 * C type : PU_ENCODE_TYPE_E[4]<br>
	 * @param enMaxResolution \ufffd\ufffd\ufffd\u05b1\ufffd\ufffd\ufffd<br>
	 * C type : PU_RESOLUTION_TYPE_E<br>
	 * @param ulMaxBitRate \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * @param ulMaxFrmRate \ufffd\ufffd\ufffd\u05a1\ufffd\ufffd<br>
	 * @param ulMaxIFrameInterval \ufffd\ufffd\ufffdI\u05a1\ufffd\ufffd\ufffd<br>
	 * @param enVideoType \ufffd\ufffd\u01b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_VIDEO_TYPE_E<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_STREAM_ABILITY_PARA(int enStreamType, int enVideoFormat[], int enMaxResolution, NativeLong ulMaxBitRate, NativeLong ulMaxFrmRate, NativeLong ulMaxIFrameInterval, int enVideoType, byte szReserved[]) {
		super();
		this.enStreamType = enStreamType;
		if ((enVideoFormat.length != this.enVideoFormat.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.enVideoFormat = enVideoFormat;
		this.enMaxResolution = enMaxResolution;
		this.ulMaxBitRate = ulMaxBitRate;
		this.ulMaxFrmRate = ulMaxFrmRate;
		this.ulMaxIFrameInterval = ulMaxIFrameInterval;
		this.enVideoType = enVideoType;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_STREAM_ABILITY_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_STREAM_ABILITY_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_STREAM_ABILITY_PARA implements Structure.ByValue {
		
	};
}
