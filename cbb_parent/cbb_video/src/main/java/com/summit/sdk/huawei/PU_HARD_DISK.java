package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_HARD_DISK extends Structure {
	/** \ufffd\ufffd\ufffd\u0331\ufffd\u0163\ufffd0\ufffd\u0174\ufffd\ufffd\ufffd\u03aaSD\ufffd\ufffd\ufffd\ufffd1\ufffd\u0174\ufffd\ufffd\ufffd\u03aaEMMC */
	public NativeLong ulDiskId;
	/**
	 * \u0524\ufffd\ufffd\ufffd\u05b6\ufffd<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_HARD_DISK() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulDiskId", "szReserved");
	}
	/**
	 * @param ulDiskId \ufffd\ufffd\ufffd\u0331\ufffd\u0163\ufffd0\ufffd\u0174\ufffd\ufffd\ufffd\u03aaSD\ufffd\ufffd\ufffd\ufffd1\ufffd\u0174\ufffd\ufffd\ufffd\u03aaEMMC<br>
	 * @param szReserved \u0524\ufffd\ufffd\ufffd\u05b6\ufffd<br>
	 * C type : CHAR[32]
	 */
	public PU_HARD_DISK(NativeLong ulDiskId, byte szReserved[]) {
		super();
		this.ulDiskId = ulDiskId;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_HARD_DISK(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_HARD_DISK implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_HARD_DISK implements Structure.ByValue {
		
	};
}
