package com.summit.sdk.huawei;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_DEVICE_INFO_EX extends Structure {
	/**
	 * \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_DEVICEINFO_S
	 */
	public PU_DEVICE_INFO stDeviceInfo;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_DEVICE_ETHERNET_PARA_S
	 */
	public PU_DEVICE_ETHERNET_PARA stDeviceEthernetPara;
	/**
	 * \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_DEV_CONFIG_INFO_S
	 */
	public PU_DEV_CONFIG_INFO stConfigPara;
	/**
	 * \ufffd\u8c78\ufffd\ufffd\u01b5\ufffd\u05b1\ufffd\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_RESOLUTION_INFO_S
	 */
	public PU_RESOLUTION_INFO stResolution;
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_DEVICE_INFO_EX() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("stDeviceInfo", "stDeviceEthernetPara", "stConfigPara", "stResolution", "szReserved");
	}
	/**
	 * @param stDeviceInfo \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_DEVICEINFO_S<br>
	 * @param stDeviceEthernetPara \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_DEVICE_ETHERNET_PARA_S<br>
	 * @param stConfigPara \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_DEV_CONFIG_INFO_S<br>
	 * @param stResolution \ufffd\u8c78\ufffd\ufffd\u01b5\ufffd\u05b1\ufffd\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_RESOLUTION_INFO_S<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_DEVICE_INFO_EX(PU_DEVICE_INFO stDeviceInfo, PU_DEVICE_ETHERNET_PARA stDeviceEthernetPara, PU_DEV_CONFIG_INFO stConfigPara, PU_RESOLUTION_INFO stResolution, byte szReserved[]) {
		super();
		this.stDeviceInfo = stDeviceInfo;
		this.stDeviceEthernetPara = stDeviceEthernetPara;
		this.stConfigPara = stConfigPara;
		this.stResolution = stResolution;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_DEVICE_INFO_EX(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_DEVICE_INFO_EX implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_DEVICE_INFO_EX implements Structure.ByValue {
		
	};
}
