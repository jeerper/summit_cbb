package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_FACE_LIB_S extends Structure {
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdID */
	public NativeLong ulFaceLibID;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_FACE_LIB_TYPE_E
	 */
	public int enLibType;
	/** \ufffd\u01f7\ud98b\udf3f\ufffd */
	public boolean isControl;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b5 */
	public NativeLong uiThreshold;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[(64) + 1]
	 */
	public byte[] szLibName = new byte[(64) + 1];
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public PU_FACE_LIB_S() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulFaceLibID", "enLibType", "isControl", "uiThreshold", "szLibName", "szReserve");
	}
	/**
	 * @param ulFaceLibID \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdID<br>
	 * @param enLibType \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_FACE_LIB_TYPE_E<br>
	 * @param isControl \ufffd\u01f7\ud98b\udf3f\ufffd<br>
	 * @param uiThreshold \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b5<br>
	 * @param szLibName \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[(64) + 1]<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public PU_FACE_LIB_S(NativeLong ulFaceLibID, int enLibType, boolean isControl, NativeLong uiThreshold, byte szLibName[], byte szReserve[]) {
		super();
		this.ulFaceLibID = ulFaceLibID;
		this.enLibType = enLibType;
		this.isControl = isControl;
		this.uiThreshold = uiThreshold;
		if ((szLibName.length != this.szLibName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szLibName = szLibName;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_FACE_LIB_S(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_FACE_LIB_S implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_FACE_LIB_S implements Structure.ByValue {
		
	};
}
