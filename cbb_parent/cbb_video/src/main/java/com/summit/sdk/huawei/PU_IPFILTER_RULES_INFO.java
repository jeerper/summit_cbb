package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_IPFILTER_RULES_INFO extends Structure {
	/** \ufffd\u01f7\ufffd\ufffd\ufffd\ufffd\ufffdIP\ufffd\ufffd\ufffd\ufffd */
	public boolean bIpFilterEnable;
	/**
	 * IP\ufffd\ufffd\ufffd\u02f2\ufffd\ufffd\ufffd:\ufffd\ufffd\ufffd\ufffd or \ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_IP_FILTER_STRATEGY_E
	 */
	public int enIpFilterStrategy;
	/** IP\ufffd\ufffd\u05b7\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u013f */
	public NativeLong ulIpFilterRulesNum;
	/**
	 * IP\ufffd\ufffd\u05b7\ufffd\ufffd\ufffd\ufffd\ufffd\u0431\ufffd<br>
	 * C type : PU_IPFILTER_RULES_S[3]
	 */
	public PU_IPFILTER_RULES[] stIpFilterRulesList = new PU_IPFILTER_RULES[3];
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public PU_IPFILTER_RULES_INFO() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("bIpFilterEnable", "enIpFilterStrategy", "ulIpFilterRulesNum", "stIpFilterRulesList", "szReserve");
	}
	/**
	 * @param bIpFilterEnable \ufffd\u01f7\ufffd\ufffd\ufffd\ufffd\ufffdIP\ufffd\ufffd\ufffd\ufffd<br>
	 * @param enIpFilterStrategy IP\ufffd\ufffd\ufffd\u02f2\ufffd\ufffd\ufffd:\ufffd\ufffd\ufffd\ufffd or \ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_IP_FILTER_STRATEGY_E<br>
	 * @param ulIpFilterRulesNum IP\ufffd\ufffd\u05b7\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u013f<br>
	 * @param stIpFilterRulesList IP\ufffd\ufffd\u05b7\ufffd\ufffd\ufffd\ufffd\ufffd\u0431\ufffd<br>
	 * C type : PU_IPFILTER_RULES_S[3]<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public PU_IPFILTER_RULES_INFO(boolean bIpFilterEnable, int enIpFilterStrategy, NativeLong ulIpFilterRulesNum, PU_IPFILTER_RULES stIpFilterRulesList[], byte szReserve[]) {
		super();
		this.bIpFilterEnable = bIpFilterEnable;
		this.enIpFilterStrategy = enIpFilterStrategy;
		this.ulIpFilterRulesNum = ulIpFilterRulesNum;
		if ((stIpFilterRulesList.length != this.stIpFilterRulesList.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.stIpFilterRulesList = stIpFilterRulesList;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_IPFILTER_RULES_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_IPFILTER_RULES_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_IPFILTER_RULES_INFO implements Structure.ByValue {
		
	};
}
