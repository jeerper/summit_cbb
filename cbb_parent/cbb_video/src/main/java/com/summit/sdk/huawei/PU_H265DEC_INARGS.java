package com.summit.sdk.huawei;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_H265DEC_INARGS extends Structure {
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\u05a1\ufffd\ufffd\u05b7<br>
	 * C type : UCHAR*
	 */
	public Pointer pStream;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\u05a1\ufffd\ufffd\ufffd\ufffd */
	public int uiStreamLen;
	/** \u02b1\ufffd\ufffd\ufffd */
	public long uiTimeStamp;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\u0123\u02bd<br>
	 * C type : PU_H265D_DECODEMODE_E
	 */
	public int enDecodeMode;
	/**
	 * \u0524\ufffd\ufffd\ufffd\u05b6\ufffd<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_H265DEC_INARGS() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("pStream", "uiStreamLen", "uiTimeStamp", "enDecodeMode", "szReserved");
	}
	/**
	 * @param pStream \ufffd\ufffd\ufffd\ufffd\ufffd\u05a1\ufffd\ufffd\u05b7<br>
	 * C type : UCHAR*<br>
	 * @param uiStreamLen \ufffd\ufffd\ufffd\ufffd\ufffd\u05a1\ufffd\ufffd\ufffd\ufffd<br>
	 * @param uiTimeStamp \u02b1\ufffd\ufffd\ufffd<br>
	 * @param enDecodeMode \ufffd\ufffd\ufffd\ufffd\u0123\u02bd<br>
	 * C type : PU_H265D_DECODEMODE_E<br>
	 * @param szReserved \u0524\ufffd\ufffd\ufffd\u05b6\ufffd<br>
	 * C type : CHAR[32]
	 */
	public PU_H265DEC_INARGS(Pointer pStream, int uiStreamLen, long uiTimeStamp, int enDecodeMode, byte szReserved[]) {
		super();
		this.pStream = pStream;
		this.uiStreamLen = uiStreamLen;
		this.uiTimeStamp = uiTimeStamp;
		this.enDecodeMode = enDecodeMode;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_H265DEC_INARGS(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_H265DEC_INARGS implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_H265DEC_INARGS implements Structure.ByValue {
		
	};
}
