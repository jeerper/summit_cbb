package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_AUDIO_INFO extends Structure {
	/** \ufffd\ufffd\u01b5\u0368\ufffd\ufffdID */
	public NativeLong ulAudioChannelId;
	/**
	 * \ufffd\ufffd\u01b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ENCODE_TYPE_E
	 */
	public int enAudioEncodeMode;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulInputVolume;
	/** \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulOutputVolume;
	/**
	 * \ufffd\ufffd\u01b5G726\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_AUDIO_G726_BPS_E
	 */
	public int enAudioRate;
	/**
	 * szReserved[0]\ufffd\ufffd\u02b6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd : 0 8K, 1 12K, 2 16K, 3 24K, 4 48K, 5 22.05K, 6 32K, 7 44.1K<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_AUDIO_INFO() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulAudioChannelId", "enAudioEncodeMode", "ulInputVolume", "ulOutputVolume", "enAudioRate", "szReserved");
	}
	/**
	 * @param ulAudioChannelId \ufffd\ufffd\u01b5\u0368\ufffd\ufffdID<br>
	 * @param enAudioEncodeMode \ufffd\ufffd\u01b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ENCODE_TYPE_E<br>
	 * @param ulInputVolume \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * @param ulOutputVolume \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * @param enAudioRate \ufffd\ufffd\u01b5G726\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_AUDIO_G726_BPS_E<br>
	 * @param szReserved szReserved[0]\ufffd\ufffd\u02b6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd : 0 8K, 1 12K, 2 16K, 3 24K, 4 48K, 5 22.05K, 6 32K, 7 44.1K<br>
	 * C type : CHAR[32]
	 */
	public PU_AUDIO_INFO(NativeLong ulAudioChannelId, int enAudioEncodeMode, NativeLong ulInputVolume, NativeLong ulOutputVolume, int enAudioRate, byte szReserved[]) {
		super();
		this.ulAudioChannelId = ulAudioChannelId;
		this.enAudioEncodeMode = enAudioEncodeMode;
		this.ulInputVolume = ulInputVolume;
		this.ulOutputVolume = ulOutputVolume;
		this.enAudioRate = enAudioRate;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_AUDIO_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_AUDIO_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_AUDIO_INFO implements Structure.ByValue {
		
	};
}
