package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_PTZ_CRUISE_TRACK_PARA extends Structure {
	/** \ufffd\ufffd\u0328\ufffd\ufffd\ufffd */
	public NativeLong ulPtzId;
	/** \u0472\ufffd\ufffd\ufffd\ucf23\ufffd\ufffd\ufffd */
	public NativeLong ulCruiseTrackIndex;
	/** \u0472\ufffd\ufffd\u0123\u02bd\ufffd\ufffd1\ufffd\ufffd\ufffd\ucf23\u0268\ufffd\u88ec2\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0268\ufffd\u88e9 */
	public NativeLong ulCruiseType;
	/**
	 * \u0472\ufffd\ufffd\ufffd\ucf23\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[32]
	 */
	public byte[] szCuriseTrackName = new byte[32];
	/** \ufffd\ucf23\ufffd\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulPointNum;
	/**
	 * \ufffd\ucf23\ufffd\ufffd\ufffd\u0431\ufffd<br>
	 * C type : PU_CRUISE_POINT_S[32]
	 */
	public PU_CRUISE_POINT[] stCruisePoint = new PU_CRUISE_POINT[32];
	/**
	 * \u0472\ufffd\ufffd\ufffd\ucf23\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_PTZ_CRUISE_TRACK_E
	 */
	public int enPtzCruiseTrack;
	public PU_PTZ_CRUISE_TRACK_PARA() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulPtzId", "ulCruiseTrackIndex", "ulCruiseType", "szCuriseTrackName", "ulPointNum", "stCruisePoint", "enPtzCruiseTrack");
	}
	/**
	 * @param ulPtzId \ufffd\ufffd\u0328\ufffd\ufffd\ufffd<br>
	 * @param ulCruiseTrackIndex \u0472\ufffd\ufffd\ufffd\ucf23\ufffd\ufffd\ufffd<br>
	 * @param ulCruiseType \u0472\ufffd\ufffd\u0123\u02bd\ufffd\ufffd1\ufffd\ufffd\ufffd\ucf23\u0268\ufffd\u88ec2\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0268\ufffd\u88e9<br>
	 * @param szCuriseTrackName \u0472\ufffd\ufffd\ufffd\ucf23\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[32]<br>
	 * @param ulPointNum \ufffd\ucf23\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * @param stCruisePoint \ufffd\ucf23\ufffd\ufffd\ufffd\u0431\ufffd<br>
	 * C type : PU_CRUISE_POINT_S[32]<br>
	 * @param enPtzCruiseTrack \u0472\ufffd\ufffd\ufffd\ucf23\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_PTZ_CRUISE_TRACK_E
	 */
	public PU_PTZ_CRUISE_TRACK_PARA(NativeLong ulPtzId, NativeLong ulCruiseTrackIndex, NativeLong ulCruiseType, byte szCuriseTrackName[], NativeLong ulPointNum, PU_CRUISE_POINT stCruisePoint[], int enPtzCruiseTrack) {
		super();
		this.ulPtzId = ulPtzId;
		this.ulCruiseTrackIndex = ulCruiseTrackIndex;
		this.ulCruiseType = ulCruiseType;
		if ((szCuriseTrackName.length != this.szCuriseTrackName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCuriseTrackName = szCuriseTrackName;
		this.ulPointNum = ulPointNum;
		if ((stCruisePoint.length != this.stCruisePoint.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.stCruisePoint = stCruisePoint;
		this.enPtzCruiseTrack = enPtzCruiseTrack;
	}
	public PU_PTZ_CRUISE_TRACK_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_PTZ_CRUISE_TRACK_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_PTZ_CRUISE_TRACK_PARA implements Structure.ByValue {
		
	};
}
