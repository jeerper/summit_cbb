package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public abstract class tagItsEPoliceSnapType_V2 extends Structure {
	/** \u0368\ufffd\ufffdID */
	public NativeLong ulChannelId;
	/**
	 * ITS\u04b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : EN_ITS_TYPE
	 */
	public int enITSType;
	/**
	 * \u03a5\ufffd\ufffd\ufffd\ufffd\ufffd\u037c\ufffd\u2dfd\u02bd<br>
	 * C type : EN_ITS_REGULA_DT_TYPE
	 */
	public int enRegulaDtType;
	/**
	 * \ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[4]
	 */
	public int[] aiMultiSnapInterval = new int[4];
	/** \u03a5\ufffd\ufffd\u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u7faf14\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd15\ufffd\ufffd */
	public int iRegulationNum;
	/**
	 * \u03a5\ufffd\ufffd\u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ITS_REGULATION_SNAP_CONFIG_UNIT_S[32]
	 */
	public tagRegulationSnapConfigUnit[] astRegulationSnapCfgU = new tagRegulationSnapConfigUnit[32];
	/**
	 * \u05e5\ufffd\u013c\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ITS_SNAP_INTERVAL_TYPE
	 */
	public int enITSSnapIntervalType;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\u04e6\u05e5\ufffd\u013c\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ITS_ADAPT_INTERVAL_PARAM_S
	 */
	public tagItsAdaptSnapIntervalType stAdaptSnapInterval;
	/**
	 * \u03a5\ufffd\ufffd\u05e5\ufffd\u0137\ufffd\u02bd(\ufffd\ufffd\ufffd\ufffd\ufffd\u0161\ufffd\u02eb\ufffd\ufffd\ufffd\ufffd)<br>
	 * C type : PU_ITS_REGULA_SNAP_TYPE
	 */
	public int enRegulaSnapType;
	/** Conversion Error : sizeof(int) */
	public tagItsEPoliceSnapType_V2() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulChannelId", "enITSType", "enRegulaDtType", "aiMultiSnapInterval", "iRegulationNum", "astRegulationSnapCfgU", "enITSSnapIntervalType", "stAdaptSnapInterval", "enRegulaSnapType");
	}
	/**
	 * @param ulChannelId \u0368\ufffd\ufffdID<br>
	 * @param enITSType ITS\u04b5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : EN_ITS_TYPE<br>
	 * @param enRegulaDtType \u03a5\ufffd\ufffd\ufffd\ufffd\ufffd\u037c\ufffd\u2dfd\u02bd<br>
	 * C type : EN_ITS_REGULA_DT_TYPE<br>
	 * @param aiMultiSnapInterval \ufffd\ufffd\ufffd\u013c\ufffd\ufffd, \ufffd\ufffd\u03bb\u02b1\ufffd\ufffd ms<br>
	 * C type : INT[4]<br>
	 * @param iRegulationNum \u03a5\ufffd\ufffd\u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u7faf14\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd15\ufffd\ufffd<br>
	 * @param astRegulationSnapCfgU \u03a5\ufffd\ufffd\u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ITS_REGULATION_SNAP_CONFIG_UNIT_S[32]<br>
	 * @param enITSSnapIntervalType \u05e5\ufffd\u013c\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ITS_SNAP_INTERVAL_TYPE<br>
	 * @param stAdaptSnapInterval \ufffd\ufffd\ufffd\ufffd\u04e6\u05e5\ufffd\u013c\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_ITS_ADAPT_INTERVAL_PARAM_S<br>
	 * @param enRegulaSnapType \u03a5\ufffd\ufffd\u05e5\ufffd\u0137\ufffd\u02bd(\ufffd\ufffd\ufffd\ufffd\ufffd\u0161\ufffd\u02eb\ufffd\ufffd\ufffd\ufffd)<br>
	 * C type : PU_ITS_REGULA_SNAP_TYPE
	 */
	public tagItsEPoliceSnapType_V2(NativeLong ulChannelId, int enITSType, int enRegulaDtType, int aiMultiSnapInterval[], int iRegulationNum, tagRegulationSnapConfigUnit astRegulationSnapCfgU[], int enITSSnapIntervalType, tagItsAdaptSnapIntervalType stAdaptSnapInterval, int enRegulaSnapType) {
		super();
		this.ulChannelId = ulChannelId;
		this.enITSType = enITSType;
		this.enRegulaDtType = enRegulaDtType;
		if ((aiMultiSnapInterval.length != this.aiMultiSnapInterval.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aiMultiSnapInterval = aiMultiSnapInterval;
		this.iRegulationNum = iRegulationNum;
		if ((astRegulationSnapCfgU.length != this.astRegulationSnapCfgU.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astRegulationSnapCfgU = astRegulationSnapCfgU;
		this.enITSSnapIntervalType = enITSSnapIntervalType;
		this.stAdaptSnapInterval = stAdaptSnapInterval;
		this.enRegulaSnapType = enRegulaSnapType;
	}
	public tagItsEPoliceSnapType_V2(Pointer peer) {
		super(peer);
	}
	public static abstract class ByReference extends tagItsEPoliceSnapType_V2 implements Structure.ByReference {
		
	};
	public static abstract class ByValue extends tagItsEPoliceSnapType_V2 implements Structure.ByValue {
		
	};
}
