package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_HOTMAP_TABLE_PARA extends Structure {
	/** \u0368\ufffd\ufffdID */
	public NativeLong ulChannelId;
	/**
	 * \ufffd\ufffd\u046f\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_HOTMAP_TYPE_E
	 */
	public int enHotmapType;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_TABLE_TYPE_E
	 */
	public int enTableType;
	/**
	 * \ufffd\ufffd\u02bc\u02b1\ufffd\ufffd,\ufffd\ufffd\ufffd\ufffd\u02b1\ufffd\ufffd<br>
	 * C type : PU_TIME_S
	 */
	public PU_TIME stBeginTime;
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\u013c\ufffd\ufffd\u6d22\u00b7\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u07f6\ufffd\ufffd\ufffd \ufffd\ufffd<br>
	 * C type : CHAR[128 + 1]
	 */
	public byte[] szPath = new byte[128 + 1];
	/** C type : hotMapTable_union */
	public hotMapTable_union hotMapTable;
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	/** <i>native declaration : E:\video\HWPuSDK.h:10616</i> */
	public static class hotMapTable_union extends Union {
		/**
		 * \ufffd\ufffd\u04e6\ufffd\ufffd\u046f\ufffd\ufffd\ufffd\ufffd\u03aaTYPE_HOTMAP_SPACE<br>
		 * C type : PU_HOTMAP_TABLE_SPACE_S
		 */
		public PU_HOTMAP_TABLE_SPACE stHotMapSapceTable;
		/**
		 * \ufffd\ufffd\u04e6\ufffd\ufffd\u046f\ufffd\ufffd\ufffd\ufffd\u03aaTYPE_HOTMAP_TIME<br>
		 * C type : PU_HOTMAP_TABLE_TIME_S
		 */
		public PU_HOTMAP_TABLE_TIME stHotMapTimeTable;
		public hotMapTable_union() {
			super();
		}
		/**
		 * @param stHotMapSapceTable \ufffd\ufffd\u04e6\ufffd\ufffd\u046f\ufffd\ufffd\ufffd\ufffd\u03aaTYPE_HOTMAP_SPACE<br>
		 * C type : PU_HOTMAP_TABLE_SPACE_S
		 */
		public hotMapTable_union(PU_HOTMAP_TABLE_SPACE stHotMapSapceTable) {
			super();
			this.stHotMapSapceTable = stHotMapSapceTable;
			setType(PU_HOTMAP_TABLE_SPACE.class);
		}
		/**
		 * @param stHotMapTimeTable \ufffd\ufffd\u04e6\ufffd\ufffd\u046f\ufffd\ufffd\ufffd\ufffd\u03aaTYPE_HOTMAP_TIME<br>
		 * C type : PU_HOTMAP_TABLE_TIME_S
		 */
		public hotMapTable_union(PU_HOTMAP_TABLE_TIME stHotMapTimeTable) {
			super();
			this.stHotMapTimeTable = stHotMapTimeTable;
			setType(PU_HOTMAP_TABLE_TIME.class);
		}
		public hotMapTable_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends hotMapTable_union implements Structure.ByReference {
			
		};
		public static class ByValue extends hotMapTable_union implements Structure.ByValue {
			
		};
	};
	public PU_HOTMAP_TABLE_PARA() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulChannelId", "enHotmapType", "enTableType", "stBeginTime", "szPath", "hotMapTable", "szReserved");
	}
	/**
	 * @param ulChannelId \u0368\ufffd\ufffdID<br>
	 * @param enHotmapType \ufffd\ufffd\u046f\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_HOTMAP_TYPE_E<br>
	 * @param enTableType \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : PU_TABLE_TYPE_E<br>
	 * @param stBeginTime \ufffd\ufffd\u02bc\u02b1\ufffd\ufffd,\ufffd\ufffd\ufffd\ufffd\u02b1\ufffd\ufffd<br>
	 * C type : PU_TIME_S<br>
	 * @param szPath \ufffd\ufffd\ufffd\ufffd\ufffd\u013c\ufffd\ufffd\u6d22\u00b7\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u07f6\ufffd\ufffd\ufffd \ufffd\ufffd<br>
	 * C type : CHAR[128 + 1]<br>
	 * @param hotMapTable C type : hotMapTable_union<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_HOTMAP_TABLE_PARA(NativeLong ulChannelId, int enHotmapType, int enTableType, PU_TIME stBeginTime, byte szPath[], hotMapTable_union hotMapTable, byte szReserved[]) {
		super();
		this.ulChannelId = ulChannelId;
		this.enHotmapType = enHotmapType;
		this.enTableType = enTableType;
		this.stBeginTime = stBeginTime;
		if ((szPath.length != this.szPath.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szPath = szPath;
		this.hotMapTable = hotMapTable;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_HOTMAP_TABLE_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_HOTMAP_TABLE_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_HOTMAP_TABLE_PARA implements Structure.ByValue {
		
	};
}
