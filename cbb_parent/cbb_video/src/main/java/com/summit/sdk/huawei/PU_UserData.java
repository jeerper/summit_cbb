package com.summit.sdk.huawei;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_UserData extends Structure {
	/** C type : LAYER_THREE_TYPE_E */
	public int eType;
	/** C type : _unMetadata */
	public _unMetadata unMetaData;
	/** <i>native declaration : E:\video\HWPuSDK.h:3192</i> */
	public static class _unMetadata extends Union {
		public boolean bBoolValue;
		public byte charValue;
		/** C type : UCHAR */
		public byte ucharValue;
		public short shortValue;
		public short ushortValue;
		public int IntValue;
		public int uIntValue;
		public long longlongValue;
		public long uLonglongValue;
		/** C type : ST_BINARY */
		public ST_BINARY stBinay;
		/** C type : META_RECT_S */
		public META_RECT_S stRec;
		/** C type : META_POINT_S */
		public META_POINT_S stPoint;
		/** C type : META_LINE_S */
		public META_LINE_S stLine;
		/** C type : META_POLYGON_S */
		public META_POLYGON_S stPolyGon;
		/** C type : META_COLOR_S */
		public META_COLOR_S stColor;
		/** C type : META_HUMAN_ATTRIBUTES_S */
		public META_HUMAN_ATTRIBUTES stHumanAttr;
		/** C type : META_FACE_ATTRIBUTES_S */
		public META_FACE_ATTRIBUTES stFaceAttr;
		/** C type : META_FACE_INFO_S */
		public META_FACE_INFO stFaceInfo;
		/** C type : CHAR[1] */
		public byte[] szUserData = new byte[1];
		public _unMetadata() {
			super();
		}
		public _unMetadata(boolean bBoolValue) {
			super();
			this.bBoolValue = bBoolValue;
			setType(Boolean.TYPE);
		}
		/** @param charValue_or_ucharValue C type : UCHAR */
		public _unMetadata(byte charValue_or_ucharValue) {
			super();
			this.ucharValue = this.charValue = charValue_or_ucharValue;
			setType(Byte.TYPE);
		}
		public _unMetadata(short shortValue_or_ushortValue) {
			super();
			this.ushortValue = this.shortValue = shortValue_or_ushortValue;
			setType(Short.TYPE);
		}
		public _unMetadata(int IntValue_or_uIntValue) {
			super();
			this.uIntValue = this.IntValue = IntValue_or_uIntValue;
			setType(Integer.TYPE);
		}
		public _unMetadata(long longlongValue_or_uLonglongValue) {
			super();
			this.uLonglongValue = this.longlongValue = longlongValue_or_uLonglongValue;
			setType(Long.TYPE);
		}
		/** @param stBinay C type : ST_BINARY */
		public _unMetadata(ST_BINARY stBinay) {
			super();
			this.stBinay = stBinay;
			setType(ST_BINARY.class);
		}
		/** @param stRec C type : META_RECT_S */
		public _unMetadata(META_RECT_S stRec) {
			super();
			this.stRec = stRec;
			setType(META_RECT_S.class);
		}
		/** @param stPoint C type : META_POINT_S */
		public _unMetadata(META_POINT_S stPoint) {
			super();
			this.stPoint = stPoint;
			setType(META_POINT_S.class);
		}
		/** @param stLine C type : META_LINE_S */
		public _unMetadata(META_LINE_S stLine) {
			super();
			this.stLine = stLine;
			setType(META_LINE_S.class);
		}
		/** @param stPolyGon C type : META_POLYGON_S */
		public _unMetadata(META_POLYGON_S stPolyGon) {
			super();
			this.stPolyGon = stPolyGon;
			setType(META_POLYGON_S.class);
		}
		/** @param stColor C type : META_COLOR_S */
		public _unMetadata(META_COLOR_S stColor) {
			super();
			this.stColor = stColor;
			setType(META_COLOR_S.class);
		}
		/** @param stHumanAttr C type : META_HUMAN_ATTRIBUTES_S */
		public _unMetadata(META_HUMAN_ATTRIBUTES stHumanAttr) {
			super();
			this.stHumanAttr = stHumanAttr;
			setType(META_HUMAN_ATTRIBUTES.class);
		}
		/** @param stFaceAttr C type : META_FACE_ATTRIBUTES_S */
		public _unMetadata(META_FACE_ATTRIBUTES stFaceAttr) {
			super();
			this.stFaceAttr = stFaceAttr;
			setType(META_FACE_ATTRIBUTES.class);
		}
		/** @param stFaceInfo C type : META_FACE_INFO_S */
		public _unMetadata(META_FACE_INFO stFaceInfo) {
			super();
			this.stFaceInfo = stFaceInfo;
			setType(META_FACE_INFO.class);
		}
		/** @param szUserData C type : CHAR[1] */
		public _unMetadata(byte szUserData[]) {
			super();
			if ((szUserData.length != this.szUserData.length)) 
				throw new IllegalArgumentException("Wrong array size !");
			this.szUserData = szUserData;
			setType(byte[].class);
		}
		public _unMetadata(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends _unMetadata implements Structure.ByReference {
			
		};
		public static class ByValue extends _unMetadata implements Structure.ByValue {
			
		};
	};
	public PU_UserData() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("eType", "unMetaData");
	}
	/**
	 * @param eType C type : LAYER_THREE_TYPE_E<br>
	 * @param unMetaData C type : _unMetadata
	 */
	public PU_UserData(int eType, _unMetadata unMetaData) {
		super();
		this.eType = eType;
		this.unMetaData = unMetaData;
	}
	public PU_UserData(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_UserData implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_UserData implements Structure.ByValue {
		
	};
}
