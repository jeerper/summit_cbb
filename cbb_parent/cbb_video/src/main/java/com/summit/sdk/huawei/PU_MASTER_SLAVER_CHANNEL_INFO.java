package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_MASTER_SLAVER_CHANNEL_INFO extends Structure {
	/** \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulMasterChanCap;
	/** \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05a7\ufffd\u05b5\u0134\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulSlaveChanCap;
	/** \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulMasterChanNum;
	/** \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd */
	public NativeLong ulSlaveChanNum;
	/**
	 * \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_PRE_CHANNEL_INFO_S[(8)]
	 */
	public PU_PRE_CHANNEL_INFO[] astMasterChanInfo = new PU_PRE_CHANNEL_INFO[8];
	/**
	 * \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_PRE_CHANNEL_INFO_S[(8)]
	 */
	public PU_PRE_CHANNEL_INFO[] astSlaveChanInfo = new PU_PRE_CHANNEL_INFO[8];
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_MASTER_SLAVER_CHANNEL_INFO() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulMasterChanCap", "ulSlaveChanCap", "ulMasterChanNum", "ulSlaveChanNum", "astMasterChanInfo", "astSlaveChanInfo", "szReserved");
	}
	/**
	 * @param ulMasterChanCap \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * @param ulSlaveChanCap \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05a7\ufffd\u05b5\u0134\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * @param ulMasterChanNum \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd<br>
	 * @param ulSlaveChanNum \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd<br>
	 * @param astMasterChanInfo \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_PRE_CHANNEL_INFO_S[(8)]<br>
	 * @param astSlaveChanInfo \ufffd\ufffd\u0368\ufffd\ufffd\ufffd\ufffd\u03e2<br>
	 * C type : PU_PRE_CHANNEL_INFO_S[(8)]<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_MASTER_SLAVER_CHANNEL_INFO(NativeLong ulMasterChanCap, NativeLong ulSlaveChanCap, NativeLong ulMasterChanNum, NativeLong ulSlaveChanNum, PU_PRE_CHANNEL_INFO astMasterChanInfo[], PU_PRE_CHANNEL_INFO astSlaveChanInfo[], byte szReserved[]) {
		super();
		this.ulMasterChanCap = ulMasterChanCap;
		this.ulSlaveChanCap = ulSlaveChanCap;
		this.ulMasterChanNum = ulMasterChanNum;
		this.ulSlaveChanNum = ulSlaveChanNum;
		if ((astMasterChanInfo.length != this.astMasterChanInfo.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astMasterChanInfo = astMasterChanInfo;
		if ((astSlaveChanInfo.length != this.astSlaveChanInfo.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astSlaveChanInfo = astSlaveChanInfo;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_MASTER_SLAVER_CHANNEL_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_MASTER_SLAVER_CHANNEL_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_MASTER_SLAVER_CHANNEL_INFO implements Structure.ByValue {
		
	};
}
