package com.summit.sdk.huawei;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_DEVICE_ETHERNET_PARA extends Structure {
	/** \ufffd\u01f7\ufffd\ufffd\ufffd\ufffd\ufffdDHCP */
	public boolean bDhcpEnable;
	/**
	 * IP\ufffd\ufffd\u05b7<br>
	 * C type : CHAR[16]
	 */
	public byte[] szIPAddress = new byte[16];
	/**
	 * \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[16]
	 */
	public byte[] szSubNetMask = new byte[16];
	/**
	 * \ufffd\ufffd\u0635\ufffd\u05b7<br>
	 * C type : CHAR[16]
	 */
	public byte[] szGateWayAddress = new byte[16];
	/**
	 * \ufffd\ufffd\u04bb\ufffd\ufffdDNS\ufffd\ufffd\u05b7<br>
	 * C type : CHAR[16]
	 */
	public byte[] szFirstDNSAddress = new byte[16];
	/**
	 * \ufffd\u06b6\ufffd\ufffd\ufffdDNS\ufffd\ufffd\u05b7<br>
	 * C type : CHAR[16]
	 */
	public byte[] szSecondDNSAddress = new byte[16];
	/**
	 * szReserved[0],\ufffd\ufffd\u02be\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd,0\ufffd\ufffd\u02be\ufffd\ufffd1,1\ufffd\ufffd\u02be\ufffd\ufffd2<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_DEVICE_ETHERNET_PARA() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("bDhcpEnable", "szIPAddress", "szSubNetMask", "szGateWayAddress", "szFirstDNSAddress", "szSecondDNSAddress", "szReserved");
	}
	/**
	 * @param bDhcpEnable \ufffd\u01f7\ufffd\ufffd\ufffd\ufffd\ufffdDHCP<br>
	 * @param szIPAddress IP\ufffd\ufffd\u05b7<br>
	 * C type : CHAR[16]<br>
	 * @param szSubNetMask \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<br>
	 * C type : CHAR[16]<br>
	 * @param szGateWayAddress \ufffd\ufffd\u0635\ufffd\u05b7<br>
	 * C type : CHAR[16]<br>
	 * @param szFirstDNSAddress \ufffd\ufffd\u04bb\ufffd\ufffdDNS\ufffd\ufffd\u05b7<br>
	 * C type : CHAR[16]<br>
	 * @param szSecondDNSAddress \ufffd\u06b6\ufffd\ufffd\ufffdDNS\ufffd\ufffd\u05b7<br>
	 * C type : CHAR[16]<br>
	 * @param szReserved szReserved[0],\ufffd\ufffd\u02be\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd,0\ufffd\ufffd\u02be\ufffd\ufffd1,1\ufffd\ufffd\u02be\ufffd\ufffd2<br>
	 * C type : CHAR[32]
	 */
	public PU_DEVICE_ETHERNET_PARA(boolean bDhcpEnable, byte szIPAddress[], byte szSubNetMask[], byte szGateWayAddress[], byte szFirstDNSAddress[], byte szSecondDNSAddress[], byte szReserved[]) {
		super();
		this.bDhcpEnable = bDhcpEnable;
		if ((szIPAddress.length != this.szIPAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szIPAddress = szIPAddress;
		if ((szSubNetMask.length != this.szSubNetMask.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szSubNetMask = szSubNetMask;
		if ((szGateWayAddress.length != this.szGateWayAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szGateWayAddress = szGateWayAddress;
		if ((szFirstDNSAddress.length != this.szFirstDNSAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szFirstDNSAddress = szFirstDNSAddress;
		if ((szSecondDNSAddress.length != this.szSecondDNSAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szSecondDNSAddress = szSecondDNSAddress;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_DEVICE_ETHERNET_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_DEVICE_ETHERNET_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_DEVICE_ETHERNET_PARA implements Structure.ByValue {
		
	};
}
