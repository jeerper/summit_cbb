package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_ITS_MANUAL_SNAPSHOT_PARA extends Structure {
	/** \u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd\ufffd\ufffd\u05b5MAX_BURST_SHOOTING_NUM  (\u013f\u01f0\u05bb\u05a7\ufffd\ufffd1,\ufffd\ufffd\ufffd\ufffd\u05b5\ufffd\ufffd\u0427) */
	public NativeLong ulSnapNum;
	/**
	 * \u05e5\ufffd\u013c\ufffd\ufffd(ms) \ufffd\ufffd\u03a7[MIN_ITS_SNAPSHOT_INTERVAL, MAX_ITS_SNAPSHOT_INTERVAL]<br>
	 * C type : ULONG[5 - 1]
	 */
	public NativeLong[] aulSnapInterval = new NativeLong[5 - 1];
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_ITS_MANUAL_SNAPSHOT_PARA() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("ulSnapNum", "aulSnapInterval", "szReserved");
	}
	/**
	 * @param ulSnapNum \u05e5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd\ufffd\ufffd\u05b5MAX_BURST_SHOOTING_NUM  (\u013f\u01f0\u05bb\u05a7\ufffd\ufffd1,\ufffd\ufffd\ufffd\ufffd\u05b5\ufffd\ufffd\u0427)<br>
	 * @param aulSnapInterval \u05e5\ufffd\u013c\ufffd\ufffd(ms) \ufffd\ufffd\u03a7[MIN_ITS_SNAPSHOT_INTERVAL, MAX_ITS_SNAPSHOT_INTERVAL]<br>
	 * C type : ULONG[5 - 1]<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_ITS_MANUAL_SNAPSHOT_PARA(NativeLong ulSnapNum, NativeLong aulSnapInterval[], byte szReserved[]) {
		super();
		this.ulSnapNum = ulSnapNum;
		if ((aulSnapInterval.length != this.aulSnapInterval.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aulSnapInterval = aulSnapInterval;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_ITS_MANUAL_SNAPSHOT_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_ITS_MANUAL_SNAPSHOT_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_ITS_MANUAL_SNAPSHOT_PARA implements Structure.ByValue {
		
	};
}
