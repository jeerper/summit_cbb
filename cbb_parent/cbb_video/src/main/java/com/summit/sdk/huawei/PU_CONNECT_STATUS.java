package com.summit.sdk.huawei;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : E:\video\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_CONNECT_STATUS extends Structure {
	/**
	 * \u0368\ufffd\ufffd\ufffd\u00bc\ufffd<br>
	 * C type : PU_EVENT_COMMON_S
	 */
	public PU_EVENT_COMMON stPuEventCommon;
	/**
	 * \ufffd\u8c78IP<br>
	 * C type : CHAR[16]
	 */
	public byte[] szDeviceIP = new byte[16];
	/** \ufffd\u8c78port */
	public NativeLong ulDevicePort;
	/**
	 * \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd,\ufffd\u0336\ufffd\u03aa\ufffd\ufffdHUAWEI PU<br>
	 * C type : CHAR[12]
	 */
	public byte[] szDeviceFac = new byte[12];
	/**
	 * \ufffd\u8c78ID<br>
	 * C type : CHAR[30 + 4]
	 */
	public byte[] szDeviceID = new byte[30 + 4];
	/**
	 * \ufffd\u8c78\ufffd\u037a\ufffd<br>
	 * C type : CHAR[32]
	 */
	public byte[] szDeviceType = new byte[32];
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_CONNECT_STATUS() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("stPuEventCommon", "szDeviceIP", "ulDevicePort", "szDeviceFac", "szDeviceID", "szDeviceType", "szReserved");
	}
	/**
	 * @param stPuEventCommon \u0368\ufffd\ufffd\ufffd\u00bc\ufffd<br>
	 * C type : PU_EVENT_COMMON_S<br>
	 * @param szDeviceIP \ufffd\u8c78IP<br>
	 * C type : CHAR[16]<br>
	 * @param ulDevicePort \ufffd\u8c78port<br>
	 * @param szDeviceFac \ufffd\u8c78\ufffd\ufffd\ufffd\ufffd,\ufffd\u0336\ufffd\u03aa\ufffd\ufffdHUAWEI PU<br>
	 * C type : CHAR[12]<br>
	 * @param szDeviceID \ufffd\u8c78ID<br>
	 * C type : CHAR[30 + 4]<br>
	 * @param szDeviceType \ufffd\u8c78\ufffd\u037a\ufffd<br>
	 * C type : CHAR[32]<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_CONNECT_STATUS(PU_EVENT_COMMON stPuEventCommon, byte szDeviceIP[], NativeLong ulDevicePort, byte szDeviceFac[], byte szDeviceID[], byte szDeviceType[], byte szReserved[]) {
		super();
		this.stPuEventCommon = stPuEventCommon;
		if ((szDeviceIP.length != this.szDeviceIP.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDeviceIP = szDeviceIP;
		this.ulDevicePort = ulDevicePort;
		if ((szDeviceFac.length != this.szDeviceFac.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDeviceFac = szDeviceFac;
		if ((szDeviceID.length != this.szDeviceID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDeviceID = szDeviceID;
		if ((szDeviceType.length != this.szDeviceType.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDeviceType = szDeviceType;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_CONNECT_STATUS(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_CONNECT_STATUS implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_CONNECT_STATUS implements Structure.ByValue {
		
	};
}
